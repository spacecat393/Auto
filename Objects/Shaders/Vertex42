        temp_vertices_vec4 *= weights;
        // temp_normals_vec4 *= weights;

        vertices_vec4 += temp_vertices_vec4;
        // normals_vec4 += temp_normals_vec4;
    }

    gl_Position = vertices_vec4 * objectuniform.world * objectuniform.view * objectuniform.project;
    // fragment_normals = normals_vec4;
    fragment_texcoord = texcoord;
    fragment_light_color = objectuniform.light_color;
    // mat4 world_mat4 = inverse(world);
    // fragment_world = vec3(world_mat4[0][3], world_mat4[1][3], world_mat4[2][3]);
}