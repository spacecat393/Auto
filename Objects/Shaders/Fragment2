#version 430
precision highp float;

layout(binding = 1) uniform sampler2D texture_sampler;

// in vec4 fragment_normals;
layout(location = 0) in vec2 fragment_texcoord;
layout(location = 1) in vec3 fragment_light_color;
// in vec3 fragment_world;

layout(location = 0) out vec4 fragColor;

void main()
{
    vec4 texture_color = texture(texture_sampler, fragment_texcoord);

    if (texture_color.a == 0.0)
    {
        discard;
    }

    // vec3 ambient_light = vec3(0.3, 0.3, 0.3);//texture_color.rgb - vec3(0.6, 0.6, 0.6);
    // vec3 directional_light_color = vec3(1.0, 1.0, 1.0);//texture_color.rgb - vec3(0.3, 0.3, 0.3);
    // vec3 directional_vector = normalize(fragment_world);

    // mat4 normals_mat4 = mat4(0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 1.0);
    // vec4 transformed_normal = normals_mat4 * fragment_normals;

    // float directional = max(dot(transformed_normal.xyz, directional_vector), 0.0);
    // vec3 lighting = ambient_light + (directional_light_color * directional);

    // fragColor = vec4(texture_color.rgb * lighting, texture_color.a);
    fragColor = vec4(texture_color.rgb/* * fragment_light_color * 1.1*/, texture_color.a);
}
