#version 430
precision highp float;

layout(location = 0) in vec3 vertices;
layout(location = 1) in vec2 texcoord;
// layout(location = 2) in vec3 normals;

layout(binding = 0) uniform ObjectUniform
{
    mat4 world;
    mat4 view;
    mat4 project;
    vec3 light_color;
} objectuniform;

// uniform vec2 animation_texcoord;

layout(location = 0) out vec2 fragment_texcoord;
layout(location = 1) out vec3 fragment_light_color;

invariant gl_Position;

/*float modulo(float a, float b)
{
    return a - (b * floor(a / b));
}*/

void main()
{
    gl_Position = vec4(vertices, 1.0) * world * view * project;
    fragment_texcoord = texcoord;//vec2(modulo(texcoord.x + animation_texcoord.x, 1.0), modulo(texcoord.y + animation_texcoord.y, 1.0));
    fragment_light_color = light_color;
}
